"use strict";const e=require("../common/vendor.js"),o=require("../api/index.js"),n=e.defineStore("auth",{state:()=>({accessToken:e.index.getStorageSync("access_token")||null,refreshToken:e.index.getStorageSync("refresh_token")||null}),getters:{isAuthenticated:e=>!!e.accessToken},actions:{async login(n){console.info("🔐 开始登录流程...");try{const s=await o.userLogin(n);if(!s||200!==s.code||!s.data){const o=s&&s.message||"登录失败，未知错误";return e.index.showToast({title:o,icon:"none"}),Promise.reject(new Error(o))}{console.log("✅ 登录成功，获取Token");const{access_token:o,refresh_token:n}=s.data;if(!o||!n)throw new Error("后端返回的Token为空");this.accessToken=o,this.refreshToken=n,e.index.setStorageSync("access_token",o),e.index.setStorageSync("refresh_token",n),console.log("🔑 Token已成功保存到本地存储"),e.index.showToast({title:"登录成功",icon:"success"}),setTimeout((()=>{e.index.switchTab({url:"/pages/index/index"})}),1500)}}catch(s){throw console.error("❌ 登录请求异常:",s),e.index.showToast({title:"登录服务异常，请稍后再试",icon:"none"}),s}},logout(o=!0){console.info("🚪 开始登出流程"),this.accessToken=null,this.refreshToken=null,e.index.removeStorageSync("access_token"),e.index.removeStorageSync("refresh_token"),o&&e.index.showToast({title:"已退出登录",icon:"none"}),e.index.reLaunch({url:"/pages/auth/login"})}}});exports.useAuthStore=n;
