npm install ali-oss@^6.x --save
先用这个指令 安装阿里云 oss的sdk

方式二：使用STS Token
以一个RAM用户的身份调用STS服务的AssumeRole - 获取扮演角色的临时身份凭证接口，设置Token的最大过期时间，即可换取到临时凭证STS Token。

设置环境变量。

Mac OS X/Linux/UnixWindows
 
export ALIBABA_CLOUD_ACCESS_KEY_ID=<ALIBABA_CLOUD_ACCESS_KEY_ID>
export ALIBABA_CLOUD_ACCESS_KEY_SECRET=<ALIBABA_CLOUD_ACCESS_KEY_SECRET>
export ALIBABA_CLOUD_SECURITY_TOKEN=<ALIBABA_CLOUD_SECURITY_TOKEN>
使用临时凭证完成客户端初始化。

 
const OSS = require("ali-oss");

// 初始化OSS
const client = new OSS({
  // 从环境变量中获取AccessKey ID的值
  accessKeyId: process.env.ALIBABA_CLOUD_ACCESS_KEY_ID,
  // 从环境变量中获取AccessKey Secret的值
  accessKeySecret: process.env.ALIBABA_CLOUD_ACCESS_KEY_SECRET,
  // 从环境变量中获取STS Token的值
  stsToken: process.env.ALIBABA_CLOUD_SECURITY_TOKEN
});

// listBuckets
const buckets = await client.listBuckets();
console.log(buckets);



API

Action

说明

PutObject

oss:PutObject

上传Object。

oss:PutObjectTagging

上传Object时，如果通过x-oss-tagging指定Object的标签，则需要此操作的权限。

kms:GenerateDataKey

上传Object时，如果Object的元数据包含X-Oss-Server-Side-Encryption: KMS，则需要这两个操作的权限。

kms:Decrypt

示例代码
以下代码用于将本地文件examplefile.txt上传到目标存储空间examplebucket中的exampleobject.txt文件。

 
const OSS = require('ali-oss')
const path=require("path")

const client = new OSS({
  // yourregion填写Bucket所在地域。以华东1（杭州）为例，Region填写为oss-cn-hangzhou。
  region: 'yourregion',
  // 从环境变量中获取访问凭证。运行本代码示例之前，请确保已设置环境变量OSS_ACCESS_KEY_ID和OSS_ACCESS_KEY_SECRET。
  accessKeyId: process.env.OSS_ACCESS_KEY_ID,
  accessKeySecret: process.env.OSS_ACCESS_KEY_SECRET,
  authorizationV4: true,
  // 填写Bucket名称。
  bucket: 'examplebucket',
});

// 自定义请求头
const headers = {
  // 指定Object的存储类型。
  'x-oss-storage-class': 'Standard',
  // 指定Object的访问权限。
  'x-oss-object-acl': 'private',
  // 通过文件URL访问文件时，指定以附件形式下载文件，下载后的文件名称定义为example.txt。
  'Content-Disposition': 'attachment; filename="example.txt"',
  // 设置Object的标签，可同时设置多个标签。
  'x-oss-tagging': 'Tag1=1&Tag2=2',
  // 指定PutObject操作时是否覆盖同名目标Object。此处设置为true，表示禁止覆盖同名Object。
  'x-oss-forbid-overwrite': 'true',
};

async function put () {
  try {
    // 填写OSS文件完整路径和本地文件的完整路径。OSS文件完整路径中不能包含Bucket名称。
    // 如果本地文件的完整路径中未指定本地路径，则默认从示例程序所属项目对应本地路径中上传文件。
    const result = await client.put('exampleobject.txt', path.normalize('D:\\localpath\\examplefile.txt')
    // 自定义headers
    ,{headers}
    );
    console.log(result);
  } catch (e) {
    console.log(e);
  }
}

put();
常见问题
上传文件后如何确保返回的URL为HTTPS而不是HTTP？
如果您希望上传文件后返回的URL为HTTPS，您需要添加secure配置项，并指定该配置项的值为true。更多信息，请参见配置项。

相关文档
关于简单上传的完整示例代码，请参见GitHub示例。

关于简单上传的API接口说明，请参见PutObject。


